steps:
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '-t'
    - 'gcr.io/ordering-system-404411/ordermicroservice:latest'
    - '.'

- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'push'
    - 'gcr.io/ordering-system-404411/ordermicroservice:latest'

    # Apply Kubernetes manifests for the order database
- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'K8S/order-database/mariadb-order-secret.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west4'
    - 'CLOUDSDK_CONTAINER_CLUSTER=os-sam'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'K8S/order-database/order-mariadb-gke-pvc.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west4'
    - 'CLOUDSDK_CONTAINER_CLUSTER=os-sam'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'K8S/order-database/mariadb-order-depl.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west4'
    - 'CLOUDSDK_CONTAINER_CLUSTER=os-sam'


- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'K8S/order-service/order-depl.yaml'

  env:
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west4'
    - 'CLOUDSDK_CONTAINER_CLUSTER=os-sam' 

- name: 'gcr.io/cloud-builders/kubectl'
  args:
      - 'rollout'
      - 'restart'
      - 'deployment'
      - 'order-depl'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west4'
    - 'CLOUDSDK_CONTAINER_CLUSTER=os-sam'

images: ['gcr.io/ordering-system-404411/ordermicroservice:latest']
logsBucket: "gs://accountci-logs-bucket"


